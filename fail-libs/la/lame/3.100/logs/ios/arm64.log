$ make clean

Making clean in mpglib

rm -rf .libs _libs

test -z "libmpgdecoder.la" || rm -f libmpgdecoder.la

rm -f ./so_locations

rm -f *.o

rm -f *.lo

Making clean in libmp3lame

Making clean in i386

test -z "choose_table.o.lst choose_table.lo.lst cpu_feat.o.lst cpu_feat.lo.lst fft3dn.o.lst fft3dn.lo.lst fftsse.o.lst fftsse.lo.lst" || rm -f choose_table.o.lst choose_table.lo.lst cpu_feat.o.lst cpu_feat.lo.lst fft3dn.o.lst fft3dn.lo.lst fftsse.o.lst fftsse.lo.lst

rm -rf .libs _libs

test -z "" || rm -f 

rm -f *.o

rm -f *.lo

Making clean in vector

test -z "lclint.txt" || rm -f lclint.txt

rm -rf .libs _libs

test -z "liblamevectorroutines.la" || rm -f liblamevectorroutines.la

rm -f ./so_locations

rm -f *.o

rm -f *.lo

test -z "lclint.txt" || rm -f lclint.txt

test -z "libmp3lame.la" || rm -f libmp3lame.la

rm -f ./so_locations

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in frontend

 rm -f lame

test -z "lclint.txt lame mp3rtp mp3x" || rm -f lclint.txt lame mp3rtp mp3x

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in Dll

rm -rf .libs _libs

rm -f *.lo

Making clean in doc

Making clean in html

rm -rf .libs _libs

rm -f *.lo

Making clean in man

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in include

rm -rf .libs _libs

rm -f *.lo

Making clean in misc

test -z "abx ath scalartest" || rm -f abx ath scalartest

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in dshow

rm -rf .libs _libs

rm -f *.lo

Making clean in ACM

Making clean in ADbg

rm -rf .libs _libs

rm -f *.lo

Making clean in ddk

rm -rf .libs _libs

rm -f *.lo

Making clean in tinyxml

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in mac

rm -rf .libs _libs

rm -f *.lo

Making clean in macosx

Making clean in English.lproj

rm -rf .libs _libs

rm -f *.lo

Making clean in LAME.xcodeproj

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in vc_solution

rm -rf .libs _libs

rm -f *.lo

test -z "testcase.new.mp3" || rm -f testcase.new.mp3

rm -rf .libs _libs

rm -f *.lo

$ ./configure --prefix=/Users/jinglongcai/code/MobiPkg/compile/example/http/lame/install/ios/arm64 --exec-prefix /Users/jinglongcai/code/MobiPkg/compile/example/http/lame/install/ios/arm64 --host aarch64-apple-darwin

checking build system type... 
x86_64-apple-darwin21.6.0

checking host system type... 
aarch64-apple-darwin

checking for a BSD-compatible install... 
/usr/local/bin/ginstall -c

checking whether build environment is sane... 
yes

checking for aarch64-apple-darwin-strip... xcrun -sdk iphoneos strip 

checking for a thread-safe mkdir -p... 
/usr/local/bin/gmkdir -p

checking for gawk... 
no
checking for mawk... 
no
checking for nawk... 
no
checking for awk... 
awk

checking whether make sets $(MAKE)... 
yes

checking whether make supports nested variables... 
yes

checking whether to enable maintainer-specific portions of Makefiles... no

checking for style of include used by make... 
GNU

checking for aarch64-apple-darwin-gcc... xcrun -sdk iphoneos clang -target arm64-apple-ios 

checking whether the C compiler works... 
yes
checking for C compiler default output file name... a.out

checking for suffix of executables... 


checking whether we are cross compiling... 
yes

checking for suffix of object files... 
o
checking whether we are using the GNU C compiler... 
yes
checking whether xcrun -sdk iphoneos clang -target arm64-apple-ios  accepts -g... 
yes

checking for xcrun -sdk iphoneos clang -target arm64-apple-ios  option to accept ISO C89... 
none needed

checking whether xcrun -sdk iphoneos clang -target arm64-apple-ios  understands -c and -o together... 
yes

checking dependency style of xcrun -sdk iphoneos clang -target arm64-apple-ios ... 
gcc3

checking how to run the C preprocessor... 
xcrun -sdk iphoneos clang -target arm64-apple-ios  -E

checking for grep that handles long lines and -e... 
/usr/bin/grep
checking for egrep... 
/usr/bin/grep -E
checking for ANSI C header files... 
yes

checking for sys/types.h... 
yes

checking for sys/stat.h... 
yes

checking for stdlib.h... 
yes

checking for string.h... 
yes

checking for memory.h... 
yes

checking for strings.h... 
yes

checking for inttypes.h... 
yes

checking for stdint.h... 
yes

checking for unistd.h... 
yes

checking minix/config.h usability... 
no
checking minix/config.h presence... 
no
checking for minix/config.h... 
no

checking whether it is safe to define __EXTENSIONS__... 
yes

checking for library containing strerror... 
none required

checking how to print strings... 
printf
checking for a sed that does not truncate output... 
/usr/bin/sed

checking for fgrep... 
/usr/bin/grep -F

checking for ld used by xcrun -sdk iphoneos clang -target arm64-apple-ios ... 
xcrun -sdk iphoneos ld -target arm64-apple-ios 
checking if the linker (xcrun -sdk iphoneos ld -target arm64-apple-ios ) is GNU ld... 
no
checking for BSD- or MS-compatible name lister (nm)... 
xcrun -sdk iphoneos nm 

checking the name lister (xcrun -sdk iphoneos nm ) interface... 
BSD nm
checking whether ln -s works... 
yes

checking the maximum length of command line arguments... 
786432

checking how to convert x86_64-apple-darwin21.6.0 file names to aarch64-apple-darwin format... 
func_convert_file_noop
checking how to convert x86_64-apple-darwin21.6.0 file names to toolchain format... 
func_convert_file_noop

checking for xcrun -sdk iphoneos ld -target arm64-apple-ios  option to reload object files... 
-r

checking for aarch64-apple-darwin-objdump... 
no

checking for objdump... 
objdump

configure: WARNING: using cross tools not prefixed with host triplet

checking how to recognize dependent libraries... 
pass_all

checking for aarch64-apple-darwin-dlltool... 
no

checking for dlltool... 
no

checking how to associate runtime and link libraries... 
printf %s\n

checking for aarch64-apple-darwin-ar... xcrun -sdk iphoneos ar 

checking for archiver @FILE support... 
no

checking for aarch64-apple-darwin-strip... (cached) 
xcrun -sdk iphoneos strip 

checking for aarch64-apple-darwin-ranlib... 
xcrun -sdk iphoneos ranlib 

checking command to parse xcrun -sdk iphoneos nm  output from xcrun -sdk iphoneos clang -target arm64-apple-ios  object... 
ok

checking for sysroot... 
no
checking for a working dd... 
/bin/dd
checking how to truncate binary pipes... 
/bin/dd bs=4096 count=1

checking for aarch64-apple-darwin-mt... 
no

checking for mt... 
no

checking if : is a manifest tool... 
no

checking for aarch64-apple-darwin-dsymutil... 
no
checking for dsymutil... 
dsymutil

checking for aarch64-apple-darwin-nmedit... 
no
checking for nmedit... 
nmedit
checking for aarch64-apple-darwin-lipo... 
no
checking for lipo... 
lipo
checking for aarch64-apple-darwin-otool... 
no

checking for otool... 
otool
checking for aarch64-apple-darwin-otool64... 
no
checking for otool64... 
no
checking for -single_module linker flag... 
yes
checking for -exported_symbols_list linker flag... 
yes
checking for -force_load linker flag... 
yes

checking for dlfcn.h... 
yes

checking for objdir... 
.libs

checking if xcrun -sdk iphoneos clang -target arm64-apple-ios  supports -fno-rtti -fno-exceptions... 
yes

checking for xcrun -sdk iphoneos clang -target arm64-apple-ios  option to produce PIC... -fno-common -DPIC

checking if xcrun -sdk iphoneos clang -target arm64-apple-ios  PIC flag -fno-common -DPIC works... 
yes

checking if xcrun -sdk iphoneos clang -target arm64-apple-ios  static flag -static works... 
no
checking if xcrun -sdk iphoneos clang -target arm64-apple-ios  supports -c -o file.o... 
yes
checking if xcrun -sdk iphoneos clang -target arm64-apple-ios  supports -c -o file.o... (cached) 
yes

checking whether the xcrun -sdk iphoneos clang -target arm64-apple-ios  linker (xcrun -sdk iphoneos ld -target arm64-apple-ios ) supports shared libraries... 
yes
checking dynamic linker characteristics... 
darwin dyld

checking how to hardcode library paths into programs... 
immediate
checking whether stripping libraries is possible... 
yes
checking if libtool supports shared libraries... yes

checking whether to build shared libraries... yes

checking whether to build static libraries... 
yes

checking for aarch64-apple-darwin-gcc... (cached) xcrun -sdk iphoneos clang -target arm64-apple-ios 

checking whether we are using the GNU C compiler... (cached) 
yes

checking whether xcrun -sdk iphoneos clang -target arm64-apple-ios  accepts -g... 
(cached) 
yes

checking for xcrun -sdk iphoneos clang -target arm64-apple-ios  option to accept ISO C89... 
(cached) none needed

checking whether xcrun -sdk iphoneos clang -target arm64-apple-ios  understands -c and -o together... 
(cached) yes

checking dependency style of xcrun -sdk iphoneos clang -target arm64-apple-ios ... 
(cached) 
gcc3

checking compiler... 
clang
checking version of clang... 
14.0.0

checking dmalloc.h usability... 
no
checking dmalloc.h presence... 
no
checking for dmalloc.h... 
no

checking for ANSI C header files... 
(cached) yes

checking errno.h usability... 
yes
checking errno.h presence... 
yes
checking for errno.h... 
yes

checking fcntl.h usability... 
yes
checking fcntl.h presence... 
yes
checking for fcntl.h... 
yes

checking limits.h usability... 
yes
checking limits.h presence... 
yes
checking for limits.h... 
yes

checking for stdint.h... (cached) 
yes

checking for string.h... (cached) yes

checking sys/soundcard.h usability... 
no
checking sys/soundcard.h presence... 
no
checking for sys/soundcard.h... 
no

checking sys/time.h usability... 
yes
checking sys/time.h presence... 
yes
checking for sys/time.h... 
yes

checking for unistd.h... (cached) 
yes

checking linux/soundcard.h usability... 
no
checking linux/soundcard.h presence... 
no
checking for linux/soundcard.h... 
no

checking working SSE intrinsics... 
no
checking for an ANSI C-conforming const... 
yes
checking for inline... 
inline

checking for special C compiler options needed for large files... 
no
checking for _FILE_OFFSET_BITS value needed for large files... 
no

checking size of short... 
2

checking size of unsigned short... 
2

checking size of int... 
4

checking size of unsigned int... 
4

checking size of long... 
8

checking size of unsigned long... 
8

checking size of long long... 
8

checking size of unsigned long long... 
8

checking size of float... 
4

checking size of double... 
8

checking for long double with more range or precision than double... 
no

checking for uint8_t... 
yes

checking for int8_t... 
yes

checking for uint16_t... 
yes

checking for int16_t... 
yes

checking for uint32_t... 
yes

checking for int32_t... 
yes

checking for uint64_t... 
yes

checking for int64_t... 
yes

checking for IEEE854 compliant 80 bit floats... 
configure: WARNING: can't check for IEEE854 compliant 80 bit floats



checking for ieee754_float64_t... 
no

checking for ieee754_float32_t... 
no

configure: WARNING:
  **************************************************************************
  *                                                                        *
  * You are cross compiling:                                               *
  *   - I did not have a change to determine                               *
  *     + the size of:                                                     *
  *       - short                                                          *
  *       - unsigned short                                                 *
  *       - int                                                            *
  *       - unsigned int                                                   *
  *       - long                                                           *
  *       - unsigned long                                                  *
  *       - float                                                          *
  *       - double                                                         *
  *       - long double                                                    *
  *     + the endianess of the system                                      *
  *   - You have to provide appropriate defines for them in config.h, e.g. *
  *     + define SIZEOF_SHORT to 2 if the size of a short is 2             *
  *     + define WORDS_BIGENDIAN if your system is a big endian system     *
  *                                                                        *
  **************************************************************************

checking for size_t... 
yes

checking whether time.h and sys/time.h may both be included... 
yes

checking for working alloca.h... 
yes

checking for alloca... 
yes

checking for gettimeofday... 
yes

checking for strtol... 
yes

checking for socket... 
yes

checking termcap.h usability... 
no
checking termcap.h presence... 
no
checking for termcap.h... 
no

checking ncurses/termcap.h usability... 
no
checking ncurses/termcap.h presence... 
no
checking for ncurses/termcap.h... 
no

checking for initscr in -ltermcap... 
yes
checking for initscr in -lcurses... 
yes
checking for initscr in -lncurses... 
yes

checking for ld used by xcrun -sdk iphoneos clang -target arm64-apple-ios ... 
xcrun -sdk iphoneos ld -target arm64-apple-ios 
checking if the linker (xcrun -sdk iphoneos ld -target arm64-apple-ios ) is GNU ld... 
no
checking for shared library run path origin... 
done

checking for iconv... 
yes

checking for working iconv... 
guessing yes

checking how to link with libiconv... -liconv

checking for iconv declaration... 

         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);

checking for cos in -lm... 
yes
checking for cos in -lffm... 
no

checking for cos in -lcpml... 
no

checking for gtk-config... 
no
checking for GTK - version >= 1.2.0... 
no
*** The gtk-config script installed by GTK could not be found
*** If GTK was installed in PREFIX, make sure PREFIX/bin is in
*** your path, or set the GTK_CONFIG environment variable to the
*** full path to gtk-config.

checking use of ElectricFence malloc debugging... 
no

checking use of file io... 
lame

checking use of analyzer hooks... 
yes
checking use of mpg123 decoder... 
yes (Layer 1, 2, 3)
checking if the lame frontend should be build... 
yes

checking if mp3x is requested... 
no

checking if mp3rtp is requested... 
no
checking if dynamic linking of the frontends is requested... 
no

checking for termcap... 
yes

checking if I have to build the internal vector lib... 
no
checking for nasm... 
no

checking for additional optimizations... 
no

checking for debug options... 
no

checking that generated files are newer than configure... 
done

configure: creating ./config.status

config.status: creating Makefile

config.status: creating libmp3lame/Makefile

config.status: creating libmp3lame/i386/Makefile

config.status: creating libmp3lame/vector/Makefile

config.status: creating frontend/Makefile

config.status: creating mpglib/Makefile

config.status: creating doc/Makefile

config.status: creating doc/html/Makefile

config.status: creating doc/man/Makefile

config.status: creating include/Makefile

config.status: creating Dll/Makefile

config.status: creating misc/Makefile

config.status: creating dshow/Makefile

config.status: creating ACM/Makefile

config.status: creating ACM/ADbg/Makefile

config.status: creating ACM/ddk/Makefile

config.status: creating ACM/tinyxml/Makefile

config.status: creating lame.spec

config.status: creating mac/Makefile

config.status: creating macosx/Makefile

config.status: creating macosx/English.lproj/Makefile

config.status: creating macosx/LAME.xcodeproj/Makefile

config.status: creating vc_solution/Makefile

config.status: creating config.h

config.status: executing depfiles commands

config.status: executing libtool commands

$ make clean

Making clean in mpglib

rm -rf .libs _libs

test -z "libmpgdecoder.la" || rm -f libmpgdecoder.la

rm -f ./so_locations

rm -f *.o

rm -f *.lo

Making clean in libmp3lame

Making clean in i386

test -z "choose_table.o.lst choose_table.lo.lst cpu_feat.o.lst cpu_feat.lo.lst fft3dn.o.lst fft3dn.lo.lst fftsse.o.lst fftsse.lo.lst" || rm -f choose_table.o.lst choose_table.lo.lst cpu_feat.o.lst cpu_feat.lo.lst fft3dn.o.lst fft3dn.lo.lst fftsse.o.lst fftsse.lo.lst

rm -rf .libs _libs

test -z "" || rm -f 

rm -f *.o

rm -f *.lo

Making clean in vector

test -z "lclint.txt" || rm -f lclint.txt

rm -rf .libs _libs

test -z "" || rm -f 

rm -f *.o

rm -f *.lo

test -z "lclint.txt" || rm -f lclint.txt

test -z "libmp3lame.la" || rm -f libmp3lame.la

rm -f ./so_locations

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in frontend

 rm -f lame

test -z "lclint.txt lame mp3rtp mp3x" || rm -f lclint.txt lame mp3rtp mp3x

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in Dll

rm -rf .libs _libs

rm -f *.lo

Making clean in doc

Making clean in html

rm -rf .libs _libs

rm -f *.lo

Making clean in man

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in include

rm -rf .libs _libs

rm -f *.lo

Making clean in misc

test -z "abx ath scalartest" || rm -f abx ath scalartest

rm -rf .libs _libs

rm -f *.o

rm -f *.lo

Making clean in dshow

rm -rf .libs _libs

rm -f *.lo

Making clean in ACM

Making clean in ADbg

rm -rf .libs _libs

rm -f *.lo

Making clean in ddk

rm -rf .libs _libs

rm -f *.lo

Making clean in tinyxml

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in mac

rm -rf .libs _libs

rm -f *.lo

Making clean in macosx

Making clean in English.lproj

rm -rf .libs _libs

rm -f *.lo

Making clean in LAME.xcodeproj

rm -rf .libs _libs

rm -f *.lo

rm -rf .libs _libs

rm -f *.lo

Making clean in vc_solution

rm -rf .libs _libs

rm -f *.lo

test -z "testcase.new.mp3" || rm -f testcase.new.mp3

rm -rf .libs _libs

rm -f *.lo

$ make -j6

/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-recursive

Making all in mpglib

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT common.lo -MD -MP -MF .deps/common.Tpo -c -o common.lo common.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT dct64_i386.lo -MD -MP -MF .deps/dct64_i386.Tpo -c -o dct64_i386.lo dct64_i386.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT decode_i386.lo -MD -MP -MF .deps/decode_i386.Tpo -c -o decode_i386.lo decode_i386.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT interface.lo -MD -MP -MF .deps/interface.Tpo -c -o interface.lo interface.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer1.lo -MD -MP -MF .deps/layer1.Tpo -c -o layer1.lo layer1.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer2.lo -MD -MP -MF .deps/layer2.Tpo -c -o layer2.lo layer2.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT dct64_i386.lo -MD -MP -MF .deps/dct64_i386.Tpo -c dct64_i386.c  -fno-common -DPIC -o .libs/dct64_i386.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT interface.lo -MD -MP -MF .deps/interface.Tpo -c interface.c  -fno-common -DPIC -o .libs/interface.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT decode_i386.lo -MD -MP -MF .deps/decode_i386.Tpo -c decode_i386.c  -fno-common -DPIC -o .libs/decode_i386.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT common.lo -MD -MP -MF .deps/common.Tpo -c common.c  -fno-common -DPIC -o .libs/common.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer1.lo -MD -MP -MF .deps/layer1.Tpo -c layer1.c  -fno-common -DPIC -o .libs/layer1.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer2.lo -MD -MP -MF .deps/layer2.Tpo -c layer2.c  -fno-common -DPIC -o .libs/layer2.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT dct64_i386.lo -MD -MP -MF .deps/dct64_i386.Tpo -c dct64_i386.c -o dct64_i386.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT common.lo -MD -MP -MF .deps/common.Tpo -c common.c -o common.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer1.lo -MD -MP -MF .deps/layer1.Tpo -c layer1.c -o layer1.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT decode_i386.lo -MD -MP -MF .deps/decode_i386.Tpo -c decode_i386.c -o decode_i386.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer2.lo -MD -MP -MF .deps/layer2.Tpo -c layer2.c -o layer2.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT interface.lo -MD -MP -MF .deps/interface.Tpo -c interface.c -o interface.o >/dev/null 2>&1

mv -f .deps/dct64_i386.Tpo .deps/dct64_i386.Plo

mv -f .deps/common.Tpo .deps/common.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer3.lo -MD -MP -MF .deps/layer3.Tpo -c -o layer3.lo layer3.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../libmp3lame -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tabinit.lo -MD -MP -MF .deps/tabinit.Tpo -c -o tabinit.lo tabinit.c

mv -f .deps/layer1.Tpo .deps/layer1.Plo

mv -f .deps/decode_i386.Tpo .deps/decode_i386.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer3.lo -MD -MP -MF .deps/layer3.Tpo -c layer3.c  -fno-common -DPIC -o .libs/layer3.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tabinit.lo -MD -MP -MF .deps/tabinit.Tpo -c tabinit.c  -fno-common -DPIC -o .libs/tabinit.o

mv -f .deps/layer2.Tpo .deps/layer2.Plo

mv -f .deps/interface.Tpo .deps/interface.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tabinit.lo -MD -MP -MF .deps/tabinit.Tpo -c tabinit.c -o tabinit.o >/dev/null 2>&1

mv -f .deps/tabinit.Tpo .deps/tabinit.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../libmp3lame -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT layer3.lo -MD -MP -MF .deps/layer3.Tpo -c layer3.c -o layer3.o >/dev/null 2>&1

mv -f .deps/layer3.Tpo .deps/layer3.Plo

/bin/sh ../libtool  --tag=CC   --mode=link xcrun -sdk iphoneos clang -target arm64-apple-ios   -O3 -Wall -fPIC -O2 -Wall -fno-common   -o libmpgdecoder.la  common.lo dct64_i386.lo decode_i386.lo interface.lo layer1.lo layer2.lo layer3.lo tabinit.lo  

libtool: link: xcrun -sdk iphoneos ar  cru .libs/libmpgdecoder.a .libs/common.o .libs/dct64_i386.o .libs/decode_i386.o .libs/interface.o .libs/layer1.o .libs/layer2.o .libs/layer3.o .libs/tabinit.o 

libtool: link: xcrun -sdk iphoneos ranlib  .libs/libmpgdecoder.a

libtool: link: ( cd ".libs" && rm -f "libmpgdecoder.la" && ln -s "../libmpgdecoder.la" "libmpgdecoder.la" )

Making all in libmp3lame

Making all in i386

make[3]: Nothing to be done for `all'.

Making all in vector

make[3]: Nothing to be done for `all'.

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT VbrTag.lo -MD -MP -MF .deps/VbrTag.Tpo -c -o VbrTag.lo VbrTag.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT bitstream.lo -MD -MP -MF .deps/bitstream.Tpo -c -o bitstream.lo bitstream.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT encoder.lo -MD -MP -MF .deps/encoder.Tpo -c -o encoder.lo encoder.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT fft.lo -MD -MP -MF .deps/fft.Tpo -c -o fft.lo fft.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT gain_analysis.lo -MD -MP -MF .deps/gain_analysis.Tpo -c -o gain_analysis.lo gain_analysis.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT id3tag.lo -MD -MP -MF .deps/id3tag.Tpo -c -o id3tag.lo id3tag.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT VbrTag.lo -MD -MP -MF .deps/VbrTag.Tpo -c VbrTag.c  -fno-common -DPIC -o .libs/VbrTag.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT bitstream.lo -MD -MP -MF .deps/bitstream.Tpo -c bitstream.c  -fno-common -DPIC -o .libs/bitstream.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT encoder.lo -MD -MP -MF .deps/encoder.Tpo -c encoder.c  -fno-common -DPIC -o .libs/encoder.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT id3tag.lo -MD -MP -MF .deps/id3tag.Tpo -c id3tag.c  -fno-common -DPIC -o .libs/id3tag.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT fft.lo -MD -MP -MF .deps/fft.Tpo -c fft.c  -fno-common -DPIC -o .libs/fft.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT gain_analysis.lo -MD -MP -MF .deps/gain_analysis.Tpo -c gain_analysis.c  -fno-common -DPIC -o .libs/gain_analysis.o

VbrTag.c:263:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[0], 8u, 0xffu);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:265:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[1], 3u, 7);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:266:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[1], 1u, (cfg->samplerate_out < 16000) ? 0 : 1);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:267:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[1], 1u, cfg->version);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:268:
5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[1], 2u, 4 - 3);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:269:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[1], 1u, (!cfg->error_protection) ? 1 : 0);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:271:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[2], 4u, eov->bitrate_index);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:272:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]

    SHIFT_IN_BITS_VALUE(buffer[2], 2u, cfg->samplerate_index);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^

VbrTag.c
:
273:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[2], 1u, 0);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:
68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )

                                                                ~~ ^
VbrTag.c:274:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[2], 1u, cfg->extension);

    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:276:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[3], 2u, cfg->mode);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:277:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[3], 2u, eov->mode_ext);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:278:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[3], 1u, cfg->copyright);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:279:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[3], 1u, cfg->original);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:280:5: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    SHIFT_IN_BITS_VALUE(buffer[3], 2u, cfg->emphasis);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VbrTag.c:254:68: note: expanded from macro 'SHIFT_IN_BITS_VALUE'
#define SHIFT_IN_BITS_VALUE(x,n,v) ( x = (x << (n)) | ( (v) & ~(-1 << (n)) ) )
                                                                ~~ ^
VbrTag.c:430:23: warning: comparison of array 'pTagData->toc' not equal to a null pointer is always true [-Wtautological-pointer-compare]
        if (pTagData->toc != NULL) {
            ~~~~~~~~~~^~~    ~~~~

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT fft.lo -MD -MP -MF .deps/fft.Tpo -c fft.c -o fft.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT gain_analysis.lo -MD -MP -MF .deps/gain_analysis.Tpo -c gain_analysis.c -o gain_analysis.o >/dev/null 2>&1

16
 warnings
 generated.

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT VbrTag.lo -MD -MP -MF .deps/VbrTag.Tpo -c VbrTag.c -o VbrTag.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT encoder.lo -MD -MP -MF .deps/encoder.Tpo -c encoder.c -o encoder.o >/dev/null 2>&1

mv -f .deps/fft.Tpo .deps/fft.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT lame.lo -MD -MP -MF .deps/lame.Tpo -c -o lame.lo lame.c

mv -f .deps/gain_analysis.Tpo .deps/gain_analysis.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT newmdct.lo -MD -MP -MF .deps/newmdct.Tpo -c -o newmdct.lo newmdct.c

mv -f .deps/VbrTag.Tpo .deps/VbrTag.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT lame.lo -MD -MP -MF .deps/lame.Tpo -c lame.c  -fno-common -DPIC -o .libs/lame.o

mv -f .deps/encoder.Tpo .deps/encoder.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT presets.lo -MD -MP -MF .deps/presets.Tpo -c -o presets.lo presets.c

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT psymodel.lo -MD -MP -MF .deps/psymodel.Tpo -c -o psymodel.lo psymodel.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT newmdct.lo -MD -MP -MF .deps/newmdct.Tpo -c newmdct.c  -fno-common -DPIC -o .libs/newmdct.o

lame.c:641:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (EQ(gfp->compression_ratio, 0))
            ^
./machine.h:170:12: note: expanded from macro 'EQ'
(fabs(a) > fabs(b)) \
           ^

lame.c:641:13: note: use function 'abs' instead
./machine.h:170:12: note: expanded from macro 'EQ'
(fabs(a) > fabs(b)) \
           ^

lame.c:641:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (EQ(gfp->compression_ratio, 0))
            ^
./machine.h:172:23: note: expanded from macro 'EQ'

 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))

                      ^

lame.c:641:13: note: use function 'abs' instead
./machine.h:172:23: note: expanded from macro 'EQ'
 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))
                      ^


lame.c
:1606:
13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]

        if (NEQ(RadioGain, GAIN_NOT_ENOUGH_SAMPLES)) {

            ^

./machine.h
:
177:20
: note: expanded from macro 'NEQ'

#define NEQ(a,b) (!EQ(a,b))
                   ^
./machine.h:170:12: note: expanded from macro 'EQ'
(fabs(a) > fabs(b)) \

           ^

lame.c:1606:13: note: use function 'abs' instead
./machine.h:177:20: note: expanded from macro 'NEQ'
#define NEQ(a,b) (!EQ(a,b))

                   ^
./machine.h:170:12
: note: expanded from macro 'EQ'


(fabs(a) > fabs(b)) \
           ^

lame.c:1606:13: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        if (NEQ(RadioGain, GAIN_NOT_ENOUGH_SAMPLES)) {
            ^


./machine.h:177:
20:
 note: 
expanded from macro 'NEQ'

#define NEQ(a,b) (!EQ(a,b))
                   ^


./machine.h:
172:23: note: 
expanded from macro 'EQ'

 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))
                      ^

lame.c:1606:13: note: use function 'abs' instead
./machine.h:177:20: note: expanded from macro 'NEQ'
#define NEQ(a,b) (!EQ(a,b))
                   ^
./machine.h:172:23: note: expanded from macro 'EQ'
 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))
                      ^

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT presets.lo -MD -MP -MF .deps/presets.Tpo -c presets.c  -fno-common -DPIC -o .libs/presets.o
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT psymodel.lo -MD -MP -MF .deps/psymodel.Tpo -c psymodel.c  -fno-common -DPIC -o .libs/psymodel.o

presets.c:170:5: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    SET_OPTION(quant_comp, set->quant_comp, -1);
    ^
presets.c:36:16: note: expanded from macro 'SET_OPTION'
    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^

presets.c:170:5: note: use function 'abs' instead
presets.c:36:16: note: expanded from macro 'SET_OPTION'
    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^
presets.c:171:5: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]

    SET_OPTION(quant_comp_short, set->quant_comp_s, -1);
    ^
presets.c:36:16: note: expanded from macro 'SET_OPTION'
    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^

presets.c:171:5: note: use function 'abs' instead
presets.c:36:16: note: expanded from macro 'SET_OPTION'

    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^

presets.c:284:5: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);
    ^
presets.c:36:16: note: expanded from macro 'SET_OPTION'
    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^
presets.c:284:5: note: use function 'abs' instead
presets.c:36:16: note: expanded from macro 'SET_OPTION'

    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^
presets.c:285:5: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
    SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);
    ^
presets.c:36:16: note: expanded from macro 'SET_OPTION'

    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^
presets.c:285:5: note: use function 'abs' instead
presets.c:36:16: note: expanded from macro 'SET_OPTION'

    else if (!(fabs(lame_get_##opt(gfp) - def) > 0)) \
               ^

4 warnings generated.

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT presets.lo -MD -MP -MF .deps/presets.Tpo -c presets.c -o presets.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT id3tag.lo -MD -MP -MF .deps/id3tag.Tpo -c id3tag.c -o id3tag.o >/dev/null 2>&1
libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT newmdct.lo -MD -MP -MF .deps/newmdct.Tpo -c newmdct.c -o newmdct.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT bitstream.lo -MD -MP -MF .deps/bitstream.Tpo -c bitstream.c -o bitstream.o >/dev/null 2>&1

mv -f .deps/presets.Tpo .deps/presets.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize.lo -MD -MP -MF .deps/quantize.Tpo -c -o quantize.lo quantize.c

4 warnings generated.

mv -f .deps/newmdct.Tpo .deps/newmdct.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT lame.lo -MD -MP -MF .deps/lame.Tpo -c lame.c -o lame.o >/dev/null 2>&1

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize_pvt.lo -MD -MP -MF .deps/quantize_pvt.Tpo -c -o quantize_pvt.lo quantize_pvt.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize.lo -MD -MP -MF .deps/quantize.Tpo -c quantize.c  -fno-common -DPIC -o .libs/quantize.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize_pvt.lo -MD -MP -MF .deps/quantize_pvt.Tpo -c quantize_pvt.c  -fno-common -DPIC -o .libs/quantize_pvt.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize_pvt.lo -MD -MP -MF .deps/quantize_pvt.Tpo -c quantize_pvt.c -o quantize_pvt.o >/dev/null 2>&1

mv -f .deps/id3tag.Tpo .deps/id3tag.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT reservoir.lo -MD -MP -MF .deps/reservoir.Tpo -c -o reservoir.lo reservoir.c

mv -f .deps/lame.Tpo .deps/lame.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT set_get.lo -MD -MP -MF .deps/set_get.Tpo -c -o set_get.lo set_get.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT reservoir.lo -MD -MP -MF .deps/reservoir.Tpo -c reservoir.c  -fno-common -DPIC -o .libs/reservoir.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT psymodel.lo -MD -MP -MF .deps/psymodel.Tpo -c psymodel.c -o psymodel.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT set_get.lo -MD -MP -MF .deps/set_get.Tpo -c set_get.c  -fno-common -DPIC -o .libs/set_get.o

mv -f .deps/bitstream.Tpo .deps/bitstream.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tables.lo -MD -MP -MF .deps/tables.Tpo -c -o tables.lo tables.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT quantize.lo -MD -MP -MF .deps/quantize.Tpo -c quantize.c -o quantize.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT reservoir.lo -MD -MP -MF .deps/reservoir.Tpo -c reservoir.c -o reservoir.o >/dev/null 2>&1

set_get.c:1726:
72: 
warning: 
using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]

        assert((0 <= gfp->interChRatio && gfp->interChRatio <= 1.0) || EQ(gfp->interChRatio, -1));
                                                                       ^

./machine.h:170:12
: 
note: expanded from macro 'EQ'
(fabs(a) > fabs(b)) \
           ^

set_get.c:
1726
:72: note: use function 'abs' instead
./machine.h:170:12: note: expanded from macro 'EQ'

(fabs(a) > fabs(b)) \
           ^

set_get.c:1726:72: warning: using floating point absolute value function 'fabs' when argument is of integer type [-Wabsolute-value]
        assert((0 <= gfp->interChRatio && gfp->interChRatio <= 1.0) || EQ(gfp->interChRatio, -1));
                                                                       ^
./machine.h:172:23:
 note: 
expanded from macro 'EQ'

 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))

                      ^


set_get.c:1726:72: note: use function 'abs' instead
./machine.h:172:23: note: expanded from macro 'EQ'
 : (fabs((a)-(b)) <= (fabs(b) * 1e-6f)))

                      ^

mv -f .deps/quantize_pvt.Tpo .deps/quantize_pvt.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tables.lo -MD -MP -MF .deps/tables.Tpo -c tables.c  -fno-common -DPIC -o .libs/tables.o

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT takehiro.lo -MD -MP -MF .deps/takehiro.Tpo -c -o takehiro.lo takehiro.c

mv -f .deps/reservoir.Tpo .deps/reservoir.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT util.lo -MD -MP -MF .deps/util.Tpo -c -o util.lo util.c

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT tables.lo -MD -MP -MF .deps/tables.Tpo -c tables.c -o tables.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT takehiro.lo -MD -MP -MF .deps/takehiro.Tpo -c takehiro.c  -fno-common -DPIC -o .libs/takehiro.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT util.lo -MD -MP -MF .deps/util.Tpo -c util.c  -fno-common -DPIC -o .libs/util.o

mv -f .deps/tables.Tpo .deps/tables.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT vbrquantize.lo -MD -MP -MF .deps/vbrquantize.Tpo -c -o vbrquantize.lo vbrquantize.c

2 warnings generated.

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT set_get.lo -MD -MP -MF .deps/set_get.Tpo -c set_get.c -o set_get.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT vbrquantize.lo -MD -MP -MF .deps/vbrquantize.Tpo -c vbrquantize.c  -fno-common -DPIC -o .libs/vbrquantize.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT util.lo -MD -MP -MF .deps/util.Tpo -c util.c -o util.o >/dev/null 2>&1

vbrquantize.c:108:18: warning: unused variable 'MAGIC_INT' [-Wunused-const-variable]
static int const MAGIC_INT = MAGIC_INT_def;
                 ^
vbrquantize.c:110:22: warning: unused variable 'ROUNDFAC' [-Wunused-const-variable]
static DOUBLEX const ROUNDFAC = ROUNDFAC_def;
                     ^
vbrquantize.c:112:22: warning: unused variable 'MAGIC_FLOAT' [-Wunused-const-variable]
static DOUBLEX const MAGIC_FLOAT = MAGIC_FLOAT_def;
                     ^

mv -f .deps/quantize.Tpo .deps/quantize.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT takehiro.lo -MD -MP -MF .deps/takehiro.Tpo -c takehiro.c -o takehiro.o >/dev/null 2>&1

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT version.lo -MD -MP -MF .deps/version.Tpo -c -o version.lo version.c

mv -f .deps/set_get.Tpo .deps/set_get.Plo

/bin/sh ../libtool  --tag=CC   --mode=compile xcrun -sdk iphoneos clang -target arm64-apple-ios  -DHAVE_CONFIG_H  -I. -I.. -I../include -I. -I../mpglib -I..    -O3 -Wall -fPIC -O2 -Wall -fno-common -MT mpglib_interface.lo -MD -MP -MF .deps/mpglib_interface.Tpo -c -o mpglib_interface.lo mpglib_interface.c

mv -f .deps/util.Tpo .deps/util.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT version.lo -MD -MP -MF .deps/version.Tpo -c version.c  -fno-common -DPIC -o .libs/version.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT mpglib_interface.lo -MD -MP -MF .deps/mpglib_interface.Tpo -c mpglib_interface.c  -fno-common -DPIC -o .libs/mpglib_interface.o

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT version.lo -MD -MP -MF .deps/version.Tpo -c version.c -o version.o >/dev/null 2>&1

mv -f .deps/psymodel.Tpo .deps/psymodel.Plo

3 warnings generated.

mv -f .deps/version.Tpo .deps/version.Plo

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT vbrquantize.lo -MD -MP -MF .deps/vbrquantize.Tpo -c vbrquantize.c -o vbrquantize.o >/dev/null 2>&1

libtool: compile:  xcrun -sdk iphoneos clang -target arm64-apple-ios -DHAVE_CONFIG_H -I. -I.. -I../include -I. -I../mpglib -I.. -O3 -Wall -fPIC -O2 -Wall -fno-common -MT mpglib_interface.lo -MD -MP -MF .deps/mpglib_interface.Tpo -c mpglib_interface.c -o mpglib_interface.o >/dev/null 2>&1

mv -f .deps/takehiro.Tpo .deps/takehiro.Plo

mv -f .deps/mpglib_interface.Tpo .deps/mpglib_interface.Plo

mv -f .deps/vbrquantize.Tpo .deps/vbrquantize.Plo

/bin/sh ../libtool  --tag=CC   --mode=link xcrun -sdk iphoneos clang -target arm64-apple-ios   -O3 -Wall -fPIC -O2 -Wall -fno-common -version-info 0:0 -export-symbols ../include/libmp3lame.sym -no-undefined  -o libmp3lame.la -rpath /Users/jinglongcai/code/MobiPkg/compile/example/http/lame/install/ios/arm64/lib VbrTag.lo bitstream.lo encoder.lo fft.lo gain_analysis.lo id3tag.lo lame.lo newmdct.lo presets.lo psymodel.lo quantize.lo quantize_pvt.lo reservoir.lo set_get.lo tables.lo takehiro.lo util.lo vbrquantize.lo version.lo mpglib_interface.lo   ../mpglib/libmpgdecoder.la -lm 

libtool: link: sed 's|^|_|' < ../include/libmp3lame.sym > .libs/libmp3lame-symbols.expsym

libtool: link: xcrun -sdk iphoneos clang -target arm64-apple-ios  -dynamiclib  -o .libs/libmp3lame.0.dylib  .libs/VbrTag.o .libs/bitstream.o .libs/encoder.o .libs/fft.o .libs/gain_analysis.o .libs/id3tag.o .libs/lame.o .libs/newmdct.o .libs/presets.o .libs/psymodel.o .libs/quantize.o .libs/quantize_pvt.o .libs/reservoir.o .libs/set_get.o .libs/tables.o .libs/takehiro.o .libs/util.o .libs/vbrquantize.o .libs/version.o .libs/mpglib_interface.o   -Wl,-force_load,../mpglib/.libs/libmpgdecoder.a  -lm  -O3 -O2   -install_name  /Users/jinglongcai/code/MobiPkg/compile/example/http/lame/install/ios/arm64/lib/libmp3lame.0.dylib -compatibility_version 1 -current_version 1.0 -Wl,-single_module -Wl,-exported_symbols_list,.libs/libmp3lame-symbols.expsym

Undefined symbols for architecture arm64:
  "_lame_init_old", referenced from:
     -exported_symbol[s_list] command line option

ld: symbol(s) not found for architecture arm64

clang: error: linker command failed with exit code 1 (use -v to see invocation)

make[3]: *** [libmp3lame.la] Error 1

make[2]: *** [all-recursive] Error 1

make[1]: *** [all-recursive] Error 1

make: *** [all] Error 2

